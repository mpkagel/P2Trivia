// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P2.DAL;

namespace P2.DAL.Migrations.Project2
{
    [DbContext(typeof(Project2Context))]
    partial class Project2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("P2.DAL.Answer", b =>
                {
                    b.Property<int>("Aid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aanswer")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("AAnswer");

                    b.Property<bool>("Correct")
                        .HasColumnType("bit");

                    b.Property<int>("Qid")
                        .HasColumnType("int")
                        .HasColumnName("QId");

                    b.HasKey("Aid")
                        .HasName("PK__Answers__C6900628A24242C6");

                    b.HasIndex("Qid");

                    b.ToTable("Answers", "P2");
                });

            modelBuilder.Entity("P2.DAL.Question", b =>
                {
                    b.Property<int>("Qid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("QaverageReview")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("QAverageReview")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Qcategory")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("QCategory");

                    b.Property<int>("Qrating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QRating")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Qstring")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("QString");

                    b.Property<string>("Qtype")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("QType")
                        .HasDefaultValueSql("('Multiple')");

                    b.HasKey("Qid")
                        .HasName("PK__Question__CAB1462B3334A5BB");

                    b.ToTable("Questions", "P2");
                });

            modelBuilder.Entity("P2.DAL.Quiz", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QuizCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("QuizDifficulty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("QuizMaxScore")
                        .HasColumnType("int");

                    b.HasKey("QuizId");

                    b.ToTable("Quiz", "P2");
                });

            modelBuilder.Entity("P2.DAL.QuizQuestion", b =>
                {
                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<int>("Qid")
                        .HasColumnType("int")
                        .HasColumnName("QId");

                    b.HasKey("QuizId", "Qid")
                        .HasName("PK__QuizQues__27E9BAEC17616440");

                    b.ToTable("QuizQuestions", "P2");
                });

            modelBuilder.Entity("P2.DAL.Result", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Correct")
                        .HasColumnType("bit");

                    b.Property<int>("Qid")
                        .HasColumnType("int")
                        .HasColumnName("QId");

                    b.Property<string>("UserAnswer")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("UserQuizId")
                        .HasColumnType("int");

                    b.HasKey("ResultId");

                    b.HasIndex("Qid");

                    b.HasIndex("UserQuizId");

                    b.ToTable("Results", "P2");
                });

            modelBuilder.Entity("P2.DAL.Review", b =>
                {
                    b.Property<int>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Qid")
                        .HasColumnType("int")
                        .HasColumnName("QId");

                    b.Property<int?>("QuizId")
                        .HasColumnType("int");

                    b.Property<int>("Rratings")
                        .HasColumnType("int")
                        .HasColumnName("RRatings");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Rid")
                        .HasName("PK__Reviews__CAFF40D29D101EF8");

                    b.HasIndex("Qid");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews", "P2");
                });

            modelBuilder.Entity("P2.DAL.Tuser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AccountType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PointTotal")
                        .HasColumnType("int");

                    b.Property<string>("Pw")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PW");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__TUsers__1788CC4CA51CD972");

                    b.HasIndex(new[] { "Username" }, "UQ__TUsers__536C85E4A3387B7C")
                        .IsUnique();

                    b.ToTable("TUsers", "P2");
                });

            modelBuilder.Entity("P2.DAL.UserQuiz", b =>
                {
                    b.Property<int>("UserQuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuizActualScore")
                        .HasColumnType("int");

                    b.Property<DateTime>("QuizDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<int>("QuizMaxScore")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserQuizId");

                    b.HasIndex("QuizId");

                    b.HasIndex("UserId");

                    b.ToTable("UserQuizzes", "P2");
                });

            modelBuilder.Entity("P2.DAL.Answer", b =>
                {
                    b.HasOne("P2.DAL.Question", "QidNavigation")
                        .WithMany("Answers")
                        .HasForeignKey("Qid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QidNavigation");
                });

            modelBuilder.Entity("P2.DAL.Result", b =>
                {
                    b.HasOne("P2.DAL.Question", "QidNavigation")
                        .WithMany("Results")
                        .HasForeignKey("Qid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P2.DAL.UserQuiz", "UserQuiz")
                        .WithMany("Results")
                        .HasForeignKey("UserQuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QidNavigation");

                    b.Navigation("UserQuiz");
                });

            modelBuilder.Entity("P2.DAL.Review", b =>
                {
                    b.HasOne("P2.DAL.Question", "QidNavigation")
                        .WithMany("Reviews")
                        .HasForeignKey("Qid")
                        .HasConstraintName("FK_Reviews_Question_QId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("P2.DAL.Tuser", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Reviews_User_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QidNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("P2.DAL.UserQuiz", b =>
                {
                    b.HasOne("P2.DAL.Quiz", "Quiz")
                        .WithMany("UserQuizzes")
                        .HasForeignKey("QuizId")
                        .HasConstraintName("FK_UserQuizes_Quiz_QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P2.DAL.Tuser", "User")
                        .WithMany("UserQuizzes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserQuizes_User_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");

                    b.Navigation("User");
                });

            modelBuilder.Entity("P2.DAL.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Results");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("P2.DAL.Quiz", b =>
                {
                    b.Navigation("UserQuizzes");
                });

            modelBuilder.Entity("P2.DAL.Tuser", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("UserQuizzes");
                });

            modelBuilder.Entity("P2.DAL.UserQuiz", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
